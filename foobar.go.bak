package main

import (
	"time"

	"github.com/remeh/sizedwaitgroup"
	"github.com/vbauerster/mpb"
)

func main() {
	testSlice := makeRange(1, 100)
	swg := sizedwaitgroup.New(20)
	p := mpb.New(mpb.WithWidth(64))
	bar := p.AddBar(int64(len(testSlice)))
	//bar.Format("|#-|")
	for _, test := range testSlice {
		swg.Add()
		go func(test int, swg *sizedwaitgroup.SizedWaitGroup, bar *mpb.Bar) {
			//fmt.Printf("starting %d\n", test)
			time.Sleep(1 * time.Second)
			//fmt.Printf("finishing %d\n", test)
			bar.Increment()
			swg.Done()
		}(test, &swg, bar)
	}
	swg.Wait()
}

func makeRange(min, max int) []int {
	a := make([]int, max-min+1)
	for i := range a {
		a[i] = min + i
	}
	return a
}
